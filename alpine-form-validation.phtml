<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

?>

<div x-data="formData()" class="p-10 bg-white rounded-lg shadow-md">
    <form @submit.prevent="handleSubmit()" novalidate class="flex justify-center align-middle flex-wrap gap-8">
        <!-- Form Success Message -->
        <p x-show="formSuccess" class="message success w-4/5">
            Form submitted successfully!
        </p>

        <h2 class="font-medium mb-4 text-2xl w-full text-center">Alpine Form Validation</h2>

        <!-- Text Input -->
        <div class="w-1/4">
            <label for="text" class="block text-gray-700 mb-1">Full Name:</label>
            <input type="text" id="text" x-model="form.text"
                class="form-control w-full border rounded-md mb-2 p-2 focus:outline-none focus:border-indigo-500 focus:ring focus:ring-indigo-200"
                :class="{ 'border-red-600': errors.text }"
                placeholder="Enter full name">
            <!-- Validation Error Message -->
            <p x-show="errors.text" class="message error bg-transparent text-red-600" x-text="errors.text"></p>
        </div>

        <!-- Email Input -->
        <div class="w-1/4">
            <label for="email" class="block text-gray-700 mb-1">Email:</label>
            <input type="email" id="email" x-model="form.email"
                class="form-control w-full border rounded-md mb-2 p-2 focus:outline-none focus:border-indigo-500 focus:ring focus:ring-indigo-200"
                :class="{ 'border-red-600': errors.email }"
                placeholder="Enter email">
            <!-- Validation Error Message -->
            <p x-show="errors.email" class="message error" x-text="errors.email"></p>
        </div>

        <!-- Password Input -->
        <div class="w-1/4">
            <label for="password" class="block text-gray-700 mb-1">Password:</label>
            <input type="password" id="password" x-model="form.password"
                class="form-control w-full border rounded-md mb-2 p-2 focus:outline-none focus:border-indigo-500 focus:ring focus:ring-indigo-200"
                :class="{ 'border-red-600': errors.password }"
                placeholder="Enter password">
            <!-- Validation Error Message -->
            <p x-show="errors.password" class="message error" x-text="errors.password"></p>
        </div>

        <!-- Number Input -->
        <div class="w-1/4">
            <label for="number" class="block text-gray-700 mb-1">Conatct Number:</label>
            <input type="text" id="number" x-model="form.number" maxlength="10"
                class="form-control w-full border rounded-md mb-2 p-2 focus:outline-none focus:border-indigo-500 focus:ring focus:ring-indigo-200"
                :class="{ 'border-red-600': errors.number }"
                placeholder="Enter contact number">
            <!-- Validation Error Message -->
            <p x-show="errors.number" class="message error" x-text="errors.number"></p>
        </div>

        <!-- Date Input -->
        <div class="w-1/4">
            <label for="date" class="block text-gray-700 mb-1">Birth Date:</label>
            <input type="date" id="date" x-model="form.date"
                class="form-control w-full border rounded-md mb-2 p-2 focus:outline-none focus:border-indigo-500 focus:ring focus:ring-indigo-200"
                :class="{ 'border-red-600': errors.date }"
                placeholder="dd-mm-yyyy">
            <!-- Validation Error Message -->
            <p x-show="errors.date" class="message error" x-text="errors.date"></p>
        </div>

        <!-- Dropdown (Select) -->
        <div class="w-1/4">
            <label for="select" class="block text-gray-700 mb-1">Department:</label>
            <select id="select" x-model="form.selection"
                class="form-select w-full border rounded-md mb-2 p-2 focus:outline-none focus:border-indigo-500 focus:ring focus:ring-indigo-200"
                :class="{ 'border-red-600': errors.selection }">
                <option value="">-- Select an option --</option>
                <option value="magento">Magento</option>
                <option value="odoo">Odoo</option>
                <option value="node">Node</option>
            </select>
            <!-- Validation Error Message -->
            <p x-show="errors.selection" class="message error" x-text="errors.selection"></p>
        </div>

        <!-- Textarea -->
        <div class="w-4/5">
            <label for="textarea" class="block text-gray-700 mb-1">Address:</label>
            <textarea id="textarea" x-model="form.textarea"
                class="form-textarea w-full border rounded-md p-2 focus:outline-none focus:border-indigo-500 focus:ring focus:ring-indigo-200"
                :class="{ 'border-red-600': errors.textarea }"
                rows="1" placeholder="Enter text"></textarea>
            <!-- Validation Error Message -->
            <p x-show="errors.textarea" class="message error" x-text="errors.textarea"></p>
        </div>

        <!-- Radio Button -->
        <div class="w-4/5">
            <p class="block text-gray-700 mb-1">Gender:</p>
            <label class="inline-flex items-center">
                <input type="radio" name="gender" value="male" x-model="form.gender"
                    class="form-radio h-4 w-4 border rounded mb-2 text-indigo-600 focus:ring focus:ring-indigo-200"
                    :class="{ 'border-red-600': errors.gender }">
                <span class="ml-2">Male</span>
            </label>
            <label class="inline-flex items-center ml-4">
                <input type="radio" name="gender" value="female" x-model="form.gender"
                    class="form-radio h-4 w-4 border rounded mb-2 text-indigo-600 focus:ring focus:ring-indigo-200"
                    :class="{ 'border-red-600': errors.gender }">
                <span class="ml-2">Female</span>
            </label>
            <!-- Validation Error Message -->
            <p x-show="errors.gender" class="message error" x-text="errors.gender"></p>
        </div>

        <!-- Checkbox -->
        <div class="w-4/5">
            <label class="flex items-center">
                <input type="checkbox" x-model="form.agreement"
                    class="form-checkbox h-4 w-4 border rounded mb-2 text-indigo-600 focus:ring focus:ring-indigo-200"
                    :class="{ 'border-red-600': errors.agreement }">
                <span class="ml-2 text-gray-700">I agree to the terms and conditions</span>
            </label>
            <!-- Validation Error Message -->
            <p x-show="errors.agreement" class="message error" x-text="errors.agreement"></p>
        </div>

        <!-- Submit Button -->
        <div class="w-4/5">
            <button type="submit"
                class="btn btn-primary">
                Submit
            </button>
        </div>
    </form>
</div>
<script>
function formData() {
        return {
            form: {
                text: '',
                email: '',
                password: '',
                number: '',
                agreement: false,
                gender: '',
                selection: '',
                textarea: '',
                date: '',
            },
            errors: {},
            formSuccess: false,

            // Email validation helper function
            validateEmail(email) {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return emailRegex.test(email);
            },

            // Validate the form and handle submission
            handleSubmit() {
                // Reset previous errors and success message
                this.errors = {};
                this.formSuccess = false;

                // Perform validation checks on each input
                // Text validation
                if (!this.form.text) {
                    this.errors.text = 'Name is required.';
                }

                // Email validation
                if (!this.form.email) {
                    this.errors.email = 'Email is required.';
                } else if (!this.validateEmail(this.form.email)) {
                    this.errors.email = 'Invalid email format.';
                }

                // Password validation
                if (!this.form.password) {
                    this.errors.password = 'Password is required.';
                } else if (this.form.password.length < 8) {
                    this.errors.password = 'Password must be at least 8 characters.';
                }

                // Number validation
                if (!this.form.number) {
                    this.errors.number = 'Contact Number is required.';
                } else if (isNaN(this.form.number)) {
                    this.errors.number = 'Contact Number must contain numbers.';
                }

                // Date validation
                if (!this.form.date) {
                    this.errors.date = 'Birth Date is required.';
                }

                // Agreement validation
                if (!this.form.agreement) {
                    this.errors.agreement = 'You must agree to the terms and conditions.';
                }

                // Gender validation
                if (!this.form.gender) {
                    this.errors.gender = 'Please select a gender.';
                }

                // Selection validation
                if (!this.form.selection) {
                    this.errors.selection = 'Please select department.';
                }

                // Textarea validation
                if (!this.form.textarea) {
                    this.errors.textarea = 'Address is required.';
                }

                // Check if there are no errors before submitting the form
                if (Object.keys(this.errors).length === 0) {
                    // Simulate form submission
                    this.formSuccess = true;
                    setTimeout(() => {
                       this.formSuccess = false;
                    }, 2000);
                    console.log('Form submitted successfully!', this.form);

                    // Reset the form after successful submission
                    this.form = {
                        text: '',
                        email: '',
                        password: '',
                        number: '',
                        agreement: false,
                        gender: '',
                        selection: '',
                        textarea: '',
                        date: ''
                    };
                }
            },

  
        };
    }
</script>